using Microsoft.SharePoint.Utilities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FeatureAdmin.Test.TestContent
{
    /// <summary>
    /// A reference to the sharepoint containers that are generated by the PowerShell script 'resetTestContent.ps1' 
    /// in the Scripts folder of this git repository
    /// </summary>
    public static class SharePointContainers
    {
        private const string appConfigKeyWebApp = "WebAppUrl";

        private const string nameActivated = "activated";
        private const string nameInactive = "inactive";


        public static class Farm
        {
            public const int HealthyWebFeatureActivatedTotal = 3;
            public const int FaultyWebFeatureActivatedTotal = 3;
            public const int HealthySiCoFeatureActivatedTotal = 1;
            public const int FaultySiCoFeatureActivatedTotal = 1;
            public const int HealthyWebAppFeatureActivatedTotal = 1;
            public const int FaultyWebAppFeatureActivatedTotal = 1;
            public const int HealthyFarmFeatureActivated = 1;
            public const int FaultyFarmFeatureActivated = 1;


        }

            public static class WebApplication
        {
            public const int HealthyWebAppFeatureActivated = 1;
            public const int FaultyWebAppFeatureActivated = 1;

            // Attention - One time setup required for this to work:
            // you need to copy the app.config.txt and rename it to app.config, then put your correct test web app name in there
            public static string Url
            {
                get
                {
                    string url = System.Configuration.ConfigurationManager.AppSettings[appConfigKeyWebApp];
                    return SPUtility.ConcatUrls(url, "/"); // make sure, Url ends with a "/" ...
                }
            }

            public static string UrlPlusManagedPath
            {
                get
                {
                    return SPUtility.ConcatUrls(Url, "fa"); 
                }
            }
        }

        public static class SiCoActivated
        {
            public const int HealthySiCoFeatureActivated = 1;
            public const int FaultySiCoFeatureActivated = 1;
            public const int HealthyWebFeatureActivated = 1;
            public const int FaultyWebFeatureActivated = 1;
            public const int HealthyWebFeatureActivatedTotal = 2;
            public const int FaultyWebFeatureActivatedTotal = 2;

            public static string Url = SPUtility.ConcatUrls(WebApplication.UrlPlusManagedPath, nameActivated);

            public static class SubWebActivated
            {
                public const int HealthyWebFeatureActivated = 1;
                public const int FaultyWebFeatureActivated = 1;
                public static string Url = SPUtility.ConcatUrls(SiCoActivated.Url, nameActivated);
            }

            public static class SubWebInactive
            {
                public const int HealthyWebFeatureActivated = 0;
                public const int FaultyWebFeatureActivated = 0;
                public static string Url = SPUtility.ConcatUrls(SiCoActivated.Url, nameInactive);
            }
        }
        public static class SiCInActive
        {
            public const int HealthySiCoFeatureActivated = 0;
            public const int FaultySiCoFeatureActivated = 0;
            public const int HealthyWebFeatureActivated = 0;
            public const int FaultyWebFeatureActivated = 0;
            public const int HealthyWebFeatureActivatedTotal = 1;
            public const int FaultyWebFeatureActivatedTotal = 1;
            public static string Url = SPUtility.ConcatUrls(WebApplication.UrlPlusManagedPath, nameInactive);

            public static class SubWebActivated
            {
                public const int HealthyWebFeatureActivated = 1;
                public const int FaultyWebFeatureActivated = 1;
                public static string Url = SPUtility.ConcatUrls(SiCInActive.Url, nameActivated);
            }

            public static class SubWebInactive
            {
                public const int HealthyWebFeatureActivated = 0;
                public const int FaultyWebFeatureActivated = 0;
                public static string Url = SPUtility.ConcatUrls(SiCInActive.Url, nameInactive);
            }
        }

    }
}
